#!/bin/zsh

[[ ! $(git status 2> /dev/null) ]] && echo "Error: Not a git repository" && exit

branch_name=$(git branch | grep \* | cut -d ' ' -f2)

project_name=$(echo $branch_name | cut -d '-' -f1)
issue_number=$(echo $branch_name | cut -d '-' -f2)

if [[ $1 == "-n" ]]; then
    nocommit=true
else
    msg=$1
fi

changes_description=$(git status | tail -1 | cut -d' ' -f1-5)
if [[ $changes_description == "no changes added to commit" ||
      $changes_description == "nothing added to commit but" ]]; then
  no_commit_status=true
fi

real_modified_file=false
files=$(git ls-files -m ; git ls-files . --exclude-standard --others)
while read -r file; do
    if [[ $file != *"common-schemas"* && $file != *"marklogic-common"* ]]; then
        real_modified_file=true
    fi
done <<< $files

[[ $real_modified_file == "true" ]] || echo "Only ignore files modified. Commit:"

if [[ $real_modified_file == "true" &&
      $no_commit_status == "true" &&
      $nocommit != "true" ]]; then
    git status
    vared -p  "Some stuff not yet added. Add everything? [Y/n] " -c choice
    if [[ "$choice" == "n" ]]; then
        echo "OK."
    else
        while read -r file; do
            echo "Adding $file"
            git add $file
        done <<< $files
    fi
fi


if [[ $project_name == "HER" || $project_name == "DI" ]]; then
    commit_tag="$project_name-$issue_number: "
fi

if [[ $1 == "--nocommit" || $1 == "-n" ]]; then
    echo  "git push -u origin $branch_name"
    git push -u origin $branch_name
else
    if [[ ! $msg ]]; then
        vared -p "$commit_tag" -c msg
    fi
    echo Committing with message: "$commit_tag$msg"
    git commit -m "$commit_tag$msg"
    if [[ $? == "0" ]]; then
        echo  "git push -u origin $branch_name"
        git push -u origin $branch_name
    else
        echo "Commit unsuccessful"
    fi
fi
