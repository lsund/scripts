#!/bin/zsh
#
# This script replaces trash to make it safer. It moves files to ~/.Trash, and
# sorts them.


# ############################################################################
# Config


base_trashdir="$HOME/.trash"


# ############################################################################
# Preconditions


if [[ -e "/usr/bin/rm" ]]; then
    real_remove=/usr/bin/rm
elif [[ -e "/bin/rm" ]]; then
    real_remove=/bin/rm
else
    echo "Don't know which rm to use" && exit
fi

mkdir -p $base_trashdir/{1K,1M,100M,200M,1G}

# ############################################################################
# Functions


# Sets the destination trashdir depending on $1
function SetTrashdir () {
    if [[ -f "$1" ]]; then
        trashdir=$base_trashdir/trash-files
    elif [[ -d "$1" ]]; then
        trashdir=$base_trashdir/trash-dirs
    fi


    size=$(du -hs $1 | xargs | cut -d' ' -f1)
    value="${size:0:${#size}-1}"
    suffix="${size: -1}"

    if [[ $suffix == "M" ]]; then
        if [[ $value -gt 200 ]]; then
            trashdir=$base_trashdir/200M
        elif [[ $value -gt 100 ]]; then
            trashdir=$base_trashdir/100M
        else
            trashdir=$base_trashdir/1M
        fi
    elif [[ $suffix == "G" ]]; then
        trashdir=$base_trashdir/1G
    else
        trashdir=$base_trashdir/1K
    fi
}


# lists $1 and counts how many files/directories have the same name
# as $2
function CountIdentical () {
    # basevar=$(basename "$2")
    for existing in  $(ls $1 | grep $basevar-trashed)
    do
        num=${existing##*-}
        if [[  $num -gt max ]]; then
            max=$num
        fi
    done
}

function Remove () {
    if [[ $1 == "files" ]]; then
        files=$(fd -H -t f -d 1 . $base_trashdir/trash-files | head -5)
    else
        files=$(fd -d 1 -E 100M -E 200M -E 1M -E 1G . $base_trashdir/trash-dirs | head -5)
    fi
    echo
    echo $files
    if [[ $files == "" ]]; then
        echo "No more $1 to remove."
        return
    fi
    echo
    vared -p "^^^^^^^^^^^^^ Remove these files? ^^^^^^^^^^^^^^^^ [Y/n] " -c choice
    if [[ "$choice" != "n" ]]; then
        while read -r line; do
            echo -n "."
            /usr/bin/rm -rf $line
        done <<< "$files"
        echo "Done."
    fi
    Remove
}


# ############################################################################
# Main Loop

if [[ $1 == "--remove" ]]; then
    Remove "files"
    Remove "dirs"
    exit 0
fi


removed=true
for var in "$@"
    do
        basevar=$(basename "$var")
        # Remove . prefix
        if [[ ${basevar:0:1} == "." ]]; then
            len=${#basevar}
            basevar=${basevar:1:$len}
        fi
        removed=true
        if [[ -e "$var" ]]; then

            SetTrashdir $var

            # Counts the already existing copies of files/directories named
            # $var in the below directories
            max=0
            CountIdentical $trashdir $var

            sudo mv $var $trashdir/$basevar-trashed-$(( $max + 1 ))

            if [[ $? == 1 ]]; then
                echo "Error. Please fix it"
                exit 1
            fi

            echo "Moved file to trash."
        elif
            [[ -L "$var" ]]; then
            $real_remove $var
            echo "Removed symbolic link."
        else
            removed=false
            echo "trash: no such file or directory: $var"
        fi
done

[[ $removed == false ]] && exit 0;

echo


# ###########################################################################
# Print Stats

warning_kilo_bytes=5000

bytes=$(du -s $base_trashdir)
number=$(echo $bytes | cut -d'/' -f1 | xargs)

if [[ "$number" -gt warning_kilo_bytes ]]; then

    unit="KB"
    if [[ "$number" -gt "1000" ]]; then
        unit="MB"
        number=$(expr $number / 1000)
    fi
    if [[ "$number" -gt "1000" ]]; then
        unit="GB"
        number=$(expr $number / 1000)
    fi

    echo "Consider emptying trash directory"
    echo "It currently more than $(echo $number | xargs) $unit"
fi

n_files=$(fd -H -t f -d 1 . $base_trashdir/trash-files | wc -l)
n_dirs=$(fd -d 1 . $base_trashdir/trash-dirs | wc -l)

echo "Trash bin currently contains $n_files files and $n_dirs."



