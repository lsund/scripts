#!/bin/zsh

# ############################################################################
# Config


dir="$HOME/Data/log/timelog/"

logpath="$dir$file"

quiet=false

class=false

# ############################################################################
# Usage


function usage() {
cat << EOF
USAGE:

   study-tracker [ -vlcrd ]

OPTIONS:
   -h            : Help
   -v            : Verbose
   -l            : List classes
   -x CLASS      : Start logging time for the giver CLASS
   -d CLASS      : Display the current time for the given CLASS
   -r            : Reset the timer for the given CLASS
   -c CLASS      : Specify CLASS
   -a TIME       : Add TIME seconds for the given CLASS specified by -c
   -t TIME       : Set target TIME

This is a program for logging time spent on various things. The things are
called classes. If you want to start or continue working on something, specify
it with the -c option.

EOF
}

function init()
{
    echo "Start date: $(date +%y-%m-%d)" > $1
    echo "0" >> $1
    echo "0" >> $1
}


function string_to_seconds()
{
prefix=${1:0:${#1}-1}
suffix=${1:${#1}-1:${#1}}
if [[ $suffix == "s" ]]; then
    seconds=$prefix
elif [[ $suffix == "m" ]]; then
    seconds=$(( 60 * $prefix ))
elif [[ $suffix == "h" ]]; then
    seconds=$(( 60 * 60 * $prefix))
else
    echo "Invalid argument to string_to_seconds()" && exit 1
fi
}

# ############################################################################
#

while getopts "hqlc:x:r:d:a:t:" opt; do
    case "$opt" in
        h)
            usage && exit 0
            ;;
        q)
            quiet=true
            ;;
        l)
            ls $dir && exit 0
            ;;
        c)
            class="$OPTARG"
            logpath=$dir$class
            ;;
        x)
            class="$OPTARG"
            logpath=$dir$class
            [[ ! -e $logpath ]] && init $logpath
            ;;
        r)
            class="$OPTARG"
            logpath=$dir$class
            sed -i '2s/.*/0/' $logpath
            exit 0
            ;;
        d)
            class="$OPTARG"
            logpath=$dir$class
            cat $logpath
            exit 0
            ;;
        a)
            [[ "$class" == false ]] && echo "Must specify -c" && exit 1
            time="$OPTARG"
            string_to_seconds $time
            logpath=$dir$class
            newtime=$(( $(cat $logpath | head -2 | tail -1) + seconds ))
            sed -i "2s/.*/$newtime/" $logpath
            exit 0
            ;;
        t)
            [[ "$class" == false ]] && echo "Must specify -c" && exit 1
            time="$OPTARG"
            string_to_seconds $time
            logpath=$dir$class
            target=$(( $(cat $logpath | head -2 | tail -1) + seconds ))
            sed -i "3s/.*/$target/" $logpath
            exit 0
            ;;
        *)
            usage && exit
            ;;
    esac
done 2>/dev/null

[[ "$class" == false ]] && usage && exit 1

i=$(head -2 $logpath | tail -1)
target=$(tail -1 $logpath)
while true; do

    sed -i "2s/.*/$i/" $logpath
    /usr/bin/sleep 1
    i=$((i + 1))

    day="$(date -u --date @$i +%d)"
    day=$(($day - 1))
    hour="$(date -u --date @$i +%H:%M:%S)"

    target_day="$(date -u --date @$target +%d)"
    target_day=$(($target_day - 1))
    target_hour="$(date -u --date @$target +%H:%M:%S)"

    date_string="0$day:$hour"
    target_string=0$target_day:$target_hour

    echo "Current: $date_string\tTarget: $target_string"
    if [[ $quiet == false && $((i%60)) == "0" ]]; then
        echo "Current: $date_string\tTarget: $target_string"
    fi

done

