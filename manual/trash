#!/bin/zsh
#
# This script replaces trash to make it safer. It moves files to ~/.Trash, and
# sorts them.


# ############################################################################
# Config


warning_kilo_bytes=5000
base_trashdir="$HOME/.Trash"


# ############################################################################
# Preconditions


if [[ -e "/usr/bin/rm" ]]; then
    real_remove=/usr/bin/rm
elif [[ -e "/bin/rm" ]]; then
    real_remove=/bin/rm
else
    echo "Don't know which rm to use" && exit
fi

mkdir -p $base_trashdir


# ############################################################################
# Functions


# Sets the destination trashdir depending on $1
function SetTrashdir () {
    if [[ -f "$1" ]]; then
        trashdir=$base_trashdir/trash-files
    elif [[ -d "$1" ]]; then
        trashdir=$base_trashdir/trash-dirs
    fi
}


# lists $1 and counts how many files/directories have the same name
# as $2
function CountIdentical () {
    basevar=$(basename "$2")
    max=0
    for existing in  $(ls $1 | grep $basevar-trashed)
    do
        num=$(echo $existing | cut -d'-' -f3)
        if [[  $num -gt max ]]; then
            max=$num
        fi
    done
}


# ############################################################################
# Main Loop


for var in "$@"
    do
        basevar=$(basename "$var")
        if [[ -e "$var" ]]; then

            SetTrashdir $var

            CountIdentical $trashdir $var

            mv $var $trashdir/$basevar-trashed-$(( $max + 1 ))

            echo "Moving to $trashdir"
        elif
            [[ -L "$var" ]]; then
            $real_remove $var
        else
            echo "trash: no such file or directory: $var"
        fi
done

echo


# ###########################################################################
# Print Stats


bytes=$(du -s $base_trashdir)
number=$(echo $bytes | cut -d'/' -f1 | xargs)

if [[ "$number" -gt warning_kilo_bytes ]]; then


    unit="KB"
    if [[ "$number" -gt "1000" ]]; then
        unit="MB"
        number=$(expr $number / 1000)
    fi
    if [[ "$number" -gt "1000" ]]; then
        unit="GB"
        number=$(expr $number / 1000)
    fi

    echo "Consider empty trash directory"
    echo "It currently more than $(echo $number | xargs) $unit"
fi
